import framebuf # type: ignore (this is a micropython internal module)

def disp_img():
    size_x = 30
    size_y = 37
    smallBuf = bytearray(size_x * size_y * 2) # not sure whether this one is still required...
    # very unsexy way to get the image into the framebuf. Maybe something more elegant? (could also specify only the non-white pixels (non f))
    smallBuf = b'\xdfffffffdfffffffffffffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdeffdfffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff17c6dade3cefffffffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbadedade1be779d6deffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7df70f84dade3cef95b5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfff17c691943bef3bef95b57df7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9ef7f3a434ad5cf71bef95b55defdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5cef2f8c13ad7df7fbe634adbef7dfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdbe6108cd3a4beffdade34ad5defffffffffdff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffffffff9ade308c508c1bef38ce75b59df7bfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff79d6ae7b6d7b99de95bd75b5ffffbeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbade8d7ba962f3ac13ad17ceffffffffffffdff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffffdbe6ce83695a0f8c58d6badebeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffffffffffffffffffffffffdfff1befcf83ca6238ce13add6c5bef7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3cefce7bca62919c8a5a34addeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3cef4c73cb62108cb29c55adffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffffbde718cd39c929c308c35addfffffffffffffffffffffffbfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffffffffdeff59ce71947194108c8e7b75b5dfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff59ce929ccf831094cf836d7355addfffffffffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbef734add3a410943194cf8b6e7b6d7334adffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9ef7f7c5d3a414ad519cef8b108c8e7b2c6bb6bdbeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfff5defd7bd35adf3a4b2a43094ef8bcf836d73b6bddeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdeff5ceff7c596b514add3a4929c5194cf836d7bd6c5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9df7d7bdf7c575b513ad719c1094108cae7bd6c5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffdfff17c617c695bdf3ac929c5094ef8b8e7bf7c5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdeff79d617c6b6bdf3acd2a43094ae836d7318c6dfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdade38ceb6bd13adb29c30940f8c2c6b79d6ffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffff3cef18ceb6c514adb2a45194ce838e7b59ceffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffff7df779d6f7c5f3ac929c5194ae7b6d73beffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfff99d617c634add2a4ce83af7b96b5dfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffffffffffffbde17c613a5b29c8d73cf7bffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7cef17c634ad508c4d6b5defffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdeff59ced29c2c6b5defffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1ce775b57defffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffffffffbef7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'
    framebuf.FrameBuffer(smallBuf, size_x, size_y, framebuf.RGB565,320) # stride param is set to the 'big framebuffer width'

    smallBuf = bytearray(2 * 2 * 2)
    smallBuf = b'\xffff'
    # framebuf.FrameBuffer(smallBuf, 2, 2, framebuf.RGB565,320) # stride param is set to the 'big framebuffer width'
    # LCD.blit(smallBuf, 10, 10) # not using a palette (TODO: maybe need to)
    return

